<?xml version="1.0" encoding="UTF-8"?>
<project name="transactions-api" default="build-module">
<!-- MAKE SURE THAT THE PROJECT NAME REFLECTS THE MODULE FOLDER NAME!!! -->
    
   
    
    <!-- import the module template build file with the default properties and targets -->
    <import file="../../resources/build-module-template.xml"/>
    <!-- by default, the target jar file is named after the module -->
    <property name="current.module.jar.file.name" value="${ant.project.name}" />
    <property name="current.module.generated.src.dir" value="${current.module.build.dir}/generated"/>
    
    <property name="current.module.osgi.symbolic.name" value="com.atomikos.${current.module.jar.file.name}"/>
    
   <path id="classpath">
           <fileset dir="${lib.dir}">
               <include name="jta.jar"/>
               <include name="junit-3.8.1.jar"/>
           </fileset>
           <path refid="baseclasspath" />
    </path>
    
     <path id="axis.classpath">
           <fileset dir="${lib.dir}">
               <include name="*.jar"/>
           </fileset>
     </path>
    
   <!-- 
    <taskdef resource="axis-tasks.properties" classpathref="axis.classpath" />

    <target name="wsdl2java-module" depends="prepare-module">
        <axis-wsdl2java all="true"
          output="${current.module.generated.src.dir}" 
          url="${current.module.dir}/resources/v200510/atomikos.wsdl" >
            <mapping
              namespace="http://www.atomikos.com/schemas/2005/10/transactions"
              package="com.atomikos.icatch.soap.termination.atomikos._2005._10" />
      </axis-wsdl2java>


    </target>
    -->
    
    <target name="prepare-module" description="sets up the intermediate build structure">
        <mkdir dir="${current.module.build.dir}" />  
        <mkdir dir="${current.module.classes.dir}" />
        <mkdir dir="${current.module.generated.src.dir}" />        
        <mkdir dir="${current.module.test.classes.dir}" />
        <mkdir dir="${current.module.dir}/test"/>
    </target>

    
     <target name="javadoc-module">
        
        
        <!-- generate list of .java files to include in Javadoc -->
        <xslt style="${global.resource.dir}/javadoc.xsl" 
              in="${current.module.dir}/resources/javadoc.xml" 
              out="${current.module.build.dir}/javadoc_files.txt" >             
        </xslt>
         
        <!-- load the list of files as a property -->
         <loadfile
              property="javadoc.files"
              srcfile="${current.module.build.dir}/javadoc_files.txt"
              failonerror="true">
         </loadfile>
         
         <!-- copy all files to a separate dir for javadoc -->         
         <copy todir="${javadoc.src.dir}">        
             <fileset dir="${current.module.dir}/src" includes="${javadoc.files}"/>
         </copy>
    </target>
    
</project>
